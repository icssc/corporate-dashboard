generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
  binaryTargets   = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Do not modify anything above this line unless you know what you are doing.

enum UserRole {
  UNAUTHORIZED
  MEMBER
  ADMIN
}

enum ContactStatus {
  NOT_CONTACTED
  INITIAL_EMAIL_SENT
  IN_PROGRESS_AUTOMATION_DISABLED
  AUTOMATED_FOLLOWUP_SENT
  BOUNCED
  REJECTED
  SEE_NEXT_YEAR
}

model User {
  id           String    @id @unique
  auth_session Session[]
  key          Key[]
  Contact      Contact[]
  role         UserRole  @default(UNAUTHORIZED)
  name         String?
  email        String?
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Company {
  id       String    @id @unique @default(uuid())
  name     String
  url      String?
  contacts Contact[]
}

model Contact {
  id                    String        @id @unique @default(uuid())
  name                  String
  email                 String?
  title                 String?
  companyId             String
  company               Company       @relation(fields: [companyId], references: [id])
  status                ContactStatus
  committeeMemberUserId String?
  committeeMember       User?         @relation(fields: [committeeMemberUserId], references: [id])
  lastContactDate       DateTime?
  followupDate          DateTime?
  notes                 String?       @db.Text
}
